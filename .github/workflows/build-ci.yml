name: Build and Deploy

on: workflow_dispatch

  
jobs:
  # demo_app_authentication:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Generate a token
  #       id: generate-token
  #       uses: actions/create-github-app-token@v1
  #       with:
  #         app-id: ${{ vars.APP_ID }}
  #         private-key: ${{ secrets.PRIVATEKEY }}

      # - name: Use the token
      #   env:
      #     GH_TOKEN: ${{ steps.generate-token.outputs.token }}
      #   run: |
      #     gh api octocat
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build and test with Maven
      run: |
       mvn spring-javaformat:apply
       mvn -B package -Pcoverage
      

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v2
      with:
        name: app-jar
        path: target/*.jar

    - name: Generate JaCoCo badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        badges-directory: badges
        generate-branches-badge: true
        generate-summary: true

    - name: Log coverage percentages to workflow output
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branches = ${{ steps.jacoco.outputs.branches }}"

    - name: Upload JaCoCo coverage report as a workflow artifact
      uses: actions/upload-artifact@v3
      with:
        name: jacoco-report
        path: target/site/jacoco/


    - name: Comment on PR with coverage percentages
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        REPORT=$(<badges/coverage-summary.json)
        COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
        BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
        NEWLINE=$'\n'
        BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
        gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Get the Coverage info
      run: |
        echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}"
        echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"

  
  SAST-Scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      

    - name: sast-scan
      uses: AppThreat/sast-scan-action@1.0.2

  SAST-Snyk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
            

    - name: Set up Node 14
      uses: actions/setup-node@v3
      with:
        node-version: 14
    - name: install Snyk CLI
      run: npm install -g snyk
    - name: run Snyk Open Source Test
      env:
          SNYK_TOKEN: ${{ secrets.CODEGITHUB_TOKEN }}
      run: snyk test
    - name: run Snyk Code Test
      run: snyk code test

          
      
      
    

  docker-build:
      runs-on: ubuntu-latest
      needs: build_and_test
      steps:
       - name: Checkout code
         uses: actions/checkout@v2
         with:
          fetch-depth: 0
          token: ${{ secrets.CODEGITHUB_TOKEN }}

       - name: Download JAR artifact
         uses: actions/download-artifact@v2
         with:
          name: app-jar
          path: target/*.jar

       - name: docker login
         uses: docker/login-action@v1
         with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

       - name: Build and push Docker image
         uses: docker/build-push-action@v2
         with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ruth99/github-actions-pet-clinic:${{ github.sha }}

 
     
    

   
          
          
        

  
