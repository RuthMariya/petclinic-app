name: Build and Deploy

on: workflow_dispatch
  
permissions:
  actions: write
  # checks: read|write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'


    - name: Install and run spring-javaformat
      run: |
        mvn spring-javaformat:apply
        pwd

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v2
      with:
        name: app-jar
        path: target/*.jar

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run tests and generate Jacoco report
      run: |
        mvn spring-javaformat:apply
        mvn test verify jacoco:report

    # - name: Copy Coverage To Predictable Location
    #   run: |
    #     cp target/*/jacoco/jacoco.xml target/site/jacoco.xml
    #     pwd
    #     ls
        
    - name: JaCoCo Code Coverage Report
      id: jacoco_reporter
      uses: PavanMudigonda/jacoco-reporter@v5.0
      with:
          coverage_results_path: 'target/**/jacoco.xml'
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.CODEGITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 80
          fail_below_threshold: false
          publish_only_summary: false    

    - name: Add Coverage Job Summary
      run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY
          
    - name: Upload Code Coverage Artifacts
      uses: actions/upload-artifact@v2
      with:
          name: code-coverage-report-markdown
          path: '**/coverage-results.md'
          retention-days: 1  

  docker-build:
    runs-on: ubuntu-latest
    needs: build
    

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download JAR artifact
      uses: actions/download-artifact@v2
      with:
        name: app-jar
        path: target/*.jar

    - name: docker login
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ruth99/github-actions-pet-clinic:${{ github.sha }}
          
        

  
